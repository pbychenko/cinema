import React, { useState, useEffect } from 'react';
// import { getTrendingData } from '../api';
import Head from 'next/head';
import 'antd/dist/reset.css';
import axios from "axios";
import CustomHeader from '../components/CustomHeader';
import Cards from '../components/Cards';
import { Layout, Spin, Pagination, Alert } from 'antd';
import routes from '../routes';

const { Content, Footer } = Layout;

process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

const Home = ({data}) => {
// const Home = () => {
  const [page, setPage] = useState(1);
  const [trendingData, setTrendingData] = useState(data.results);
  // const [trendingData, setTrendingData] = useState([]);
  const [showLoad, setShowLoad] = useState(false);
  const [showError, setShowError] = useState(false);

  const getTrendingData = async(pageNumber) => {
    const trendsUrl = routes.getTrendingPath(pageNumber);
    setShowLoad(true);
    try {
      const res = await axios.get(trendsUrl); 
      setTrendingData(() => res.data.results);
      setShowLoad(false);
      setShowError(false);
    } catch (e) {
      console.log(e);
      setShowError(true);
      setShowLoad(false);      
    }
  }

  // useEffect(() => {
  //   console.log('here')
  //   getTrendingData(page);
  // }, [page]);

  const onPaginationChange = async(current) => {
    setPage(current);
    await getTrendingData(current);
  };
  
  return (
    <Layout>
      <Head>
        <title>Cinema</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CustomHeader />      
       <Content
        className='main-content'
      >
        <Layout
          className='main-layout'
        >
          {(showLoad && !showError) ? (
            <Spin tip="Loading" size="large">
              <div className="content" />
            </Spin>): null}
          {(!showLoad && showError) ? (
            <Alert
              message="Что пошло не так"
              description="Попробуйте перезагрузить страницу чуть позже"
              type="error"
              // closable
              // onClose={onClose}
            />
          ): null}
          {(!showLoad && !showError) ? (
            <>
              <Cards data={trendingData} />
                <Pagination
                  current={page}
                  onChange={onPaginationChange}
                  total={data.total_results}
                  pageSize = {20}
                  className='pagination'
                  />
            </>): null}
        </Layout>
      </Content>
      <Footer>
        Cinema ©2022 Created by pavl1k
      </Footer>
    </Layout>
  );
};

export default Home;

export async function getStaticProps() {
  const trendsUrl = routes.getTrendingPath(1);
  const res = await axios.get(trendsUrl);
  const data = res.data;
  return {
    props: {
      data
    },
  };
}
