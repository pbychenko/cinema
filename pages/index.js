import React, { useState, useEffect } from 'react';
// import { getTrendingData } from '../api';
import Head from 'next/head';
import 'antd/dist/reset.css';
import axios from "axios";
import CustomHeader from '../components/CustomHeader';
import Cards from '../components/Cards';
import { Layout, theme, Spin } from 'antd';
import routes from '../routes';

const { Content, Footer } = Layout;

process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

const Home = ({data}) => {
  const [page, setPage] = useState(1);
  const [trendingData, setTrendingData] = useState(data);
  // const [load, setLoad] = useState(false);
  // const [showError, setShowError] = useState(false);

  const {
    token: { colorBgContainer },
  } = theme.useToken();

  const getTrendingData = async(pageNumber) => {
    const trendsUrl = routes.getTrendingPath(pageNumber);
    const res = await axios.get(trendsUrl); 
    setTrendingData(() => res.data.results);
    console.log('here') 
  }

  // useEffect(() => {
  //   console.log('here')
  //   getTrendingData(page)
  //   // console.log('here')
  // }, [page]);

  const onPaginationChange = async(current) => {
    setPage(current);
    await getTrendingData(current);
  };
  
  return (
    <Layout>
      <Head>
        <title>Cinema</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CustomHeader />
      {/* <Spin tip="Loading" size="large">
        <div className="content" />
      </Spin> */}
       <Content
        style={{
          padding: '0 50px',
        }}
      >
        <Layout
          style={{
            padding: '24px 0',
            background: colorBgContainer,
          }}
        >
          <Cards data={trendingData} onPaginationChange={onPaginationChange} page={page} />
        </Layout>
      </Content>
      <Footer style={{textAlign: 'center'}}>
        Cinema Â©2022 Created by pavl1k
      </Footer>
    </Layout>
  );
};

export default Home;

export async function getStaticProps() {
  const trendsUrl = routes.getTrendingPath(1);
  const res = await axios.get(trendsUrl);
  const data = res.data.results;
  return {
    props: {
      data
    },
  };
}
